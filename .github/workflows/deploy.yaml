name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: chamathranaweera/employee-manager-api:prod

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            docker pull chamathranaweera/employee-manager-api:prod

            # Check if the container exists and stop and remove it if it does
            if [ "$(docker ps -aq -f name=employee-manager-api)" ]; then
              echo "Stopping and removing existing container..."
              docker stop employee-manager-api
              docker rm employee-manager-api
            fi

            # Run the new container with environment variables
            echo "Starting new container..."
            docker run -d --name employee-manager-api \
              -p 80:8000 \
              -e DATABASE_URL="${{ secrets.DATABASE_URL }}" \
              -e BASE_URL="${{ secrets.BASE_URL }}" \
              -e SERVER_PREFIX="${{ secrets.SERVER_PREFIX }}" \
              -e PORT="${{ secrets.PORT }}" \
              -e DUMMY_IMAGE="${{ secrets.DUMMY_IMAGE }}" \
              chamathranaweera/employee-manager-api:prod
